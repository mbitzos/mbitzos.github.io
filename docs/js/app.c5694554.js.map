{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/about/unity-logo.png","webpack:///./src/assets/posts/programmatic-animation-using-coroutines/cover.png","webpack:///./src/assets sync ^\\.\\/.*$","webpack:///./src/views/devblog/index.vue?12fa","webpack:///./src/assets/posts/programmatic-animation-using-coroutines/animation-curve-editor.jpg","webpack:///./src/App.vue?d232","webpack:///./src/assets/posts/programmatic-animation-using-coroutines/card-deck-animation.gif","webpack:///./src/assets/fonts/AkagiPro-Light.ttf","webpack:///./src/views/devblog/components/image.vue?6e1d","webpack:///./src/assets/about/python.png","webpack:///./src/assets/about/digital_face.png","webpack:///./src/assets/about/os-logo.png","webpack:///./src/assets/about/java-logo.svg","webpack:///./src/assets/posts/programmatic-animation-using-coroutines/color-lerp-example.gif","webpack:///./src/assets/about/vue-logo.svg","webpack:///./src/assets/about/face1.jpg","webpack:///./src/assets/posts/programmatic-animation-using-coroutines/attack-dash-animations.gif","webpack:///./src/assets/about/favicon-image.png","webpack:///./src/views/devblog/components/sidebar.vue?5d34","webpack:///./src/assets/posts/programmatic-animation-using-coroutines/ambient-lighting-animations.gif","webpack:///./src/assets/about/vue-logo.png","webpack:///./src/views/devblog/components/post.vue?e17c","webpack:///./src/assets/about/mongodb.jpg","webpack:///./src/App.vue","webpack:///./src/App.vue?1d14","webpack:///./src/App.vue?97f5","webpack:///./src/views/home/index.vue","webpack:///./src/views/home/index.vue?c546","webpack:///./src/views/home/index.vue?da2a","webpack:///./src/views/devblog/index.vue","webpack:///./src/views/devblog/components/sidebar.vue","webpack:///./src/views/devblog/posts/generated-posts/introductions.vue","webpack:///./src/views/devblog/components/image.vue","webpack:///./src/views/devblog/components/image.vue?9b60","webpack:///./src/views/devblog/components/image.vue?dc3f","webpack:///./src/views/devblog/components/code.vue","webpack:///./src/views/devblog/components/code.vue?1e11","webpack:///./src/views/devblog/components/code.vue?8f6d","webpack:///./src/views/devblog/posts/generated-posts/introductions.vue?2938","webpack:///./src/views/devblog/posts/generated-posts/introductions.vue?42bd","webpack:///./src/views/devblog/posts/generated-posts/introductions.meta.ts","webpack:///./src/views/devblog/posts/generated-posts/fsm-player-controllers.vue","webpack:///./src/views/devblog/posts/generated-posts/fsm-player-controllers.vue?7e25","webpack:///./src/views/devblog/posts/generated-posts/fsm-player-controllers.vue?283e","webpack:///./src/views/devblog/posts/generated-posts/fsm-player-controllers.meta.ts","webpack:///./src/views/devblog/posts/generated-posts/programmatic-animation-using-coroutines.vue","webpack:///./src/views/devblog/posts/generated-posts/programmatic-animation-using-coroutines.vue?678d","webpack:///./src/views/devblog/posts/generated-posts/programmatic-animation-using-coroutines.vue?80ad","webpack:///./src/views/devblog/posts/generated-posts/programmatic-animation-using-coroutines.meta.ts","webpack:///./src/views/devblog/posts/index.ts","webpack:///./src/views/devblog/components/sidebar.vue?bee2","webpack:///./src/views/devblog/components/sidebar.vue?3968","webpack:///./src/views/devblog/index.vue?712e","webpack:///./src/views/devblog/index.vue?333e","webpack:///./src/views/devblog/components/post.vue","webpack:///./src/views/devblog/components/post.vue?b6eb","webpack:///./src/views/devblog/components/post.vue?ee25","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./src/views/devblog/components/code.vue?bf5e","webpack:///./src/assets/fonts/AkagiPro-Black.ttf","webpack:///./src/assets/posts/fsm-player-controllers/fsm-quest.jpg","webpack:///./src/assets/posts/fsm-player-controllers/fsm-locked-door.jpg","webpack:///./src/assets/posts/fsm-player-controllers/cover.jpg","webpack:///./src/assets/posts/programmatic-animation-using-coroutines/animation-curves.gif","webpack:///./src/views/home/index.vue?411f"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","methods","hello","console","log","created","this","render","class","src","href","target","style","to","__scopeId","custom","navigate","title","role","open","toggleOpen","$route","fullPath","articles","article","isSelected","image","uri","subtitle","props","type","required","ref","icon","copy","components","FontAwesomeIcon","navigator","clipboard","writeText","mounted","$refs","mySlot","textContent","PostImageComponent","CodeBlock","tags","date","Date","component","mainImage","posts","reverse","post","sidebar","toLocaleDateString","tag","highlightAll","devblogPaths","path","defaultPath","routes","redirect","children","router","history","add","App","use","mount"],"mappings":"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","file":"js/app.c5694554.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"img/unity-logo.80de313e.png\";","module.exports = __webpack_public_path__ + \"img/cover.f0d5e85d.png\";","var map = {\n\t\"./about/digital_face.png\": \"683f\",\n\t\"./about/face1.jpg\": \"96fb\",\n\t\"./about/favicon-image.png\": \"a5b1\",\n\t\"./about/java-logo.svg\": \"7106\",\n\t\"./about/mongodb.jpg\": \"be36\",\n\t\"./about/os-logo.png\": \"6867\",\n\t\"./about/python.png\": \"4f3a\",\n\t\"./about/unity-logo.png\": \"0a4d\",\n\t\"./about/vue-logo.png\": \"b3ff\",\n\t\"./about/vue-logo.svg\": \"7cce\",\n\t\"./fonts/AkagiPro-Black.ttf\": \"d0122\",\n\t\"./fonts/AkagiPro-Light.ttf\": \"421b\",\n\t\"./main.scss\": \"b383\",\n\t\"./posts/fsm-player-controllers/cover.jpg\": \"ef7d\",\n\t\"./posts/fsm-player-controllers/fsm-locked-door.jpg\": \"e06c\",\n\t\"./posts/fsm-player-controllers/fsm-quest.jpg\": \"d6a1\",\n\t\"./posts/programmatic-animation-using-coroutines/ambient-lighting-animations.gif\": \"ac6c\",\n\t\"./posts/programmatic-animation-using-coroutines/animation-curve-editor.jpg\": \"33c1\",\n\t\"./posts/programmatic-animation-using-coroutines/animation-curves.gif\": \"fc91\",\n\t\"./posts/programmatic-animation-using-coroutines/attack-dash-animations.gif\": \"9f0b\",\n\t\"./posts/programmatic-animation-using-coroutines/card-deck-animation.gif\": \"40cc\",\n\t\"./posts/programmatic-animation-using-coroutines/color-lerp-example.gif\": \"77b3\",\n\t\"./posts/programmatic-animation-using-coroutines/cover.png\": \"0cfc\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"1771\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./index.vue?vue&type=style&index=0&id=2a5999e6&lang=scss\"","module.exports = __webpack_public_path__ + \"img/animation-curve-editor.a99888a7.jpg\";","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=45d0e757&lang=scss\"","module.exports = __webpack_public_path__ + \"img/card-deck-animation.5a9ceaf8.gif\";","module.exports = __webpack_public_path__ + \"fonts/AkagiPro-Light.d9114d22.ttf\";","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./image.vue?vue&type=style&index=0&id=df2d428e&lang=scss\"","module.exports = __webpack_public_path__ + \"img/python.05d8e48a.png\";","module.exports = __webpack_public_path__ + \"img/digital_face.756e905f.png\";","module.exports = __webpack_public_path__ + \"img/os-logo.296364b9.png\";","module.exports = __webpack_public_path__ + \"img/java-logo.84321945.svg\";","module.exports = __webpack_public_path__ + \"img/color-lerp-example.6dfaed18.gif\";","module.exports = __webpack_public_path__ + \"img/vue-logo.6fb1734b.svg\";","module.exports = __webpack_public_path__ + \"img/face1.b52cfc22.jpg\";","module.exports = __webpack_public_path__ + \"img/attack-dash-animations.b0305274.gif\";","module.exports = __webpack_public_path__ + \"img/favicon-image.b3ab9557.png\";","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./sidebar.vue?vue&type=style&index=0&id=626724b4&lang=scss\"","module.exports = __webpack_public_path__ + \"img/ambient-lighting-animations.68e7cdfc.gif\";","module.exports = __webpack_public_path__ + \"img/vue-logo.96e5850d.png\";","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./post.vue?vue&type=style&index=0&id=31b21195&lang=scss\"","module.exports = __webpack_public_path__ + \"img/mongodb.9b024a60.jpg\";","<template>\r\n  <router-view />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({\r\n  methods: {\r\n    hello() {\r\n      console.log(\"hello and welcome to my website.\");\r\n      console.log(\r\n        \"currently working on building my gamedev blog, check it out: michaelbitzos.com/devblog\"\r\n      );\r\n      console.log(\r\n        \"This was made with Vue3 and TS. I don't know why I did this but here we are.\"\r\n      );\r\n    }\r\n  },\r\n  created() {\r\n    this.hello();\r\n  }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n/** Fonts **/\r\n@font-face {\r\n  font-family: \"Akagi\";\r\n  src: local(\"Akagi\"), url(./assets/fonts/AkagiPro-Light.ttf) format(\"truetype\");\r\n}\r\n\r\n@font-face {\r\n  font-family: \"Akagi-Black\";\r\n  src: local(\"Akagi-Black\"),\r\n    url(./assets/fonts/AkagiPro-Black.ttf) format(\"truetype\");\r\n}\r\n</style>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({\r\n  methods: {\r\n    hello() {\r\n      console.log(\"hello and welcome to my website.\");\r\n      console.log(\r\n        \"currently working on building my gamedev blog, check it out: michaelbitzos.com/devblog\"\r\n      );\r\n      console.log(\r\n        \"This was made with Vue3 and TS. I don't know why I did this but here we are.\"\r\n      );\r\n    }\r\n  },\r\n  created() {\r\n    this.hello();\r\n  }\r\n});\r\n","import { render } from \"./App.vue?vue&type=template&id=45d0e757\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=45d0e757&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"content col\">\r\n    <div id=\"header\" class=\"row\">\r\n      <div id=\"header-text\" class=\"col\">\r\n        <div class=\"hey\">hey,</div>\r\n        <div class=\"name\">i'm michael bitzos.</div>\r\n      </div>\r\n      <div class=\"headshot-container\">\r\n        <img src=\"@/assets/about/face1.jpg\" />\r\n      </div>\r\n    </div>\r\n    <hr id=\"hr-1\" class=\"gradient-line left\" />\r\n    <div id=\"software-developer\" class=\"row\">\r\n      <div class=\"icon-container row\">\r\n        <div id=\"python\">\r\n          <img src=\"@/assets/about/python.png\" />\r\n        </div>\r\n        <div id=\"mongo\">\r\n          <img src=\"@/assets/about/mongodb.jpg\" />\r\n        </div>\r\n        <div id=\"vue\" class=\"small\">\r\n          <img src=\"@/assets/about/vue-logo.png\" />\r\n        </div>\r\n        <div id=\"java\" class=\"small\">\r\n          <img src=\"@/assets/about/java-logo.svg\" />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"text-block-header header\">\r\n          i'm a software developer professionally.\r\n        </div>\r\n        <div class=\"text-block\">\r\n          <div>i currently work with python & mongodb.</div>\r\n          <div>i used to do a lot of vue.js & java.</div>\r\n          <div>\r\n            here's my\r\n            <a href=\"./Michael-Bitzos-Resume.pdf\" target=\"_blank\">resume</a>\r\n          </div>\r\n          <div>\r\n            here's my\r\n            <a href=\"https://github.com/mbitzos\" target=\"_black\">github</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr id=\"hr-2\" class=\"gradient-line right\" />\r\n    <div id=\"game-developer\" class=\"row\">\r\n      <div>\r\n        <div class=\"text-block-header header\">\r\n          i'm a game developer on the side.\r\n        </div>\r\n        <div class=\"text-block\">\r\n          <div>\r\n            i'm writing blogs about my experience\r\n            <router-link to=\"devblog\">here.</router-link>\r\n          </div>\r\n          <div>\r\n            been makin' things in unity 2<span style=\"text-transform:initial\"\r\n              >D</span\r\n            >\r\n            for a while.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"icon-container row\">\r\n        <div id=\"unity\">\r\n          <img src=\"@/assets/about/unity-logo.png\" />\r\n        </div>\r\n        <div id=\"overlook\">\r\n          <img src=\"@/assets/about/os-logo.png\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr id=\"hr-3\" />\r\n    <div id=\"contact\">\r\n      <div class=\"header\">contact me</div>\r\n      <div class=\"row\">\r\n        <div class=\"contacts\">\r\n          <a href=\"mailto:mbitzos@gmail.com\">email</a>\r\n          <a href=\"https://www.linkedin.com/in/michaelbitzos/\" target=\"_blank\"\r\n            >linkedin</a\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// Some flex box utilities\r\n.row,\r\n.col {\r\n  display: flex;\r\n}\r\n.row {\r\n  flex-direction: row;\r\n}\r\n\r\n.col {\r\n  flex-direction: column;\r\n}\r\n// Some flex box utilities\r\n/** Vars **/\r\n\r\nimg {\r\n  user-select: none;\r\n}\r\n\r\nhr {\r\n  width: 50%;\r\n  height: 1px;\r\n  border: none;\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n\r\n  &#hr-1 {\r\n    margin-top: 35px;\r\n    align-self: flex-end;\r\n  }\r\n}\r\n.content {\r\n  justify-content: space-between;\r\n  text-transform: lowercase;\r\n\r\n  > .row {\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  width: 45%;\r\n  height: 100vh;\r\n  padding-top: 50px;\r\n  padding-bottom: 50px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.text-block-header {\r\n  font-size: 24px;\r\n}\r\n.text-block {\r\n  font-size: 18px;\r\n}\r\n\r\n#header {\r\n  .hey {\r\n    font-size: 48px;\r\n    font-family: Akagi-Black;\r\n  }\r\n  .name {\r\n    font-size: 48px;\r\n  }\r\n}\r\n\r\n.header {\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.headshot-container {\r\n  width: 250px;\r\n  height: 250px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  flex-shrink: 0;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transition: 0.5s opacity;\r\n  }\r\n}\r\n\r\n.icon-container {\r\n  align-items: center;\r\n  div {\r\n    width: 10vw;\r\n    height: 10vw;\r\n    min-width: 50px;\r\n    min-height: 50px;\r\n    max-width: 100px;\r\n    max-height: 100px;\r\n    border-radius: 50%;\r\n    border: 1px solid rgba(black, 0.1);\r\n    overflow: hidden;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .small {\r\n    width: 1vw;\r\n    height: 1vw;\r\n  }\r\n\r\n  div:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n\r\n  #overlook {\r\n    img {\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  #unity {\r\n    img {\r\n      margin-right: 10px;\r\n      width: 65%;\r\n    }\r\n  }\r\n\r\n  #java {\r\n    img {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  #vue {\r\n    img {\r\n      width: 65%;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n  #python {\r\n    img {\r\n      width: 70%;\r\n    }\r\n  }\r\n  #mongo {\r\n    img {\r\n      width: 100%;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n#software-developer {\r\n  .text-block,\r\n  .text-block-header {\r\n    text-align: right;\r\n  }\r\n}\r\n#contact {\r\n  text-align: center;\r\n  font-size: 24px;\r\n\r\n  margin-top: 50px;\r\n  .row {\r\n    justify-content: center;\r\n  }\r\n  .contacts {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 120px;\r\n    a {\r\n      font-size: 18px;\r\n    }\r\n  }\r\n}\r\n/** Responsive **/\r\n// Makes the icons more compact (stacked)\r\n@media only screen and (max-width: 650px) {\r\n  .content {\r\n    #software-developer,\r\n    #game-developer {\r\n      align-items: flex-end;\r\n    }\r\n  }\r\n  .icon-container {\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    div {\r\n      width: 5vw;\r\n      height: 5vw;\r\n      min-width: 50px;\r\n      min-height: 50px;\r\n\r\n      &:not(:last-child) {\r\n        margin-right: 0;\r\n      }\r\n\r\n      &:not(:first-child) {\r\n        margin-top: 10px;\r\n      }\r\n    }\r\n    .small {\r\n      width: 1vw;\r\n      height: 1vw;\r\n      min-height: 25px;\r\n      min-width: 25px;\r\n    }\r\n  }\r\n}\r\n/** MOBILE **/\r\n$mobile-size: 600px;\r\n@media only screen and (min-width: $mobile-size) {\r\n  #hr-3 {\r\n    display: none;\r\n  }\r\n}\r\n@media only screen and (max-width: $mobile-size) {\r\n  #header {\r\n    // display: none;\r\n    flex-direction: column;\r\n    text-align: center;\r\n\r\n    #header-text {\r\n      .name {\r\n        font-size: 10vw;\r\n      }\r\n    }\r\n  }\r\n\r\n  .headshot-container {\r\n    margin-top: 20px;\r\n    width: 80vw;\r\n    height: 80vw;\r\n  }\r\n\r\n  #software-developer {\r\n    flex-direction: row-reverse;\r\n\r\n    .text-block,\r\n    .text-block-header {\r\n      text-align: left;\r\n    }\r\n  }\r\n\r\n  hr {\r\n    &#hr-1,\r\n    &#hr-2,\r\n    &#hr-3 {\r\n      align-self: flex-start;\r\n      background: linear-gradient(90deg, $pink 0%, white 100%);\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  .icon-container {\r\n    margin-left: 10px;\r\n  }\r\n\r\n  #contact {\r\n    text-align: left;\r\n    margin-top: 0;\r\n\r\n    .row {\r\n      justify-content: flex-start;\r\n    }\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 1400px) {\r\n  .content {\r\n    width: 50%;\r\n  }\r\n}\r\n@media only screen and (max-width: 1300px) {\r\n  .content {\r\n    width: 60%;\r\n  }\r\n}\r\n@media only screen and (max-width: 1100px) {\r\n  .content {\r\n    width: 70%;\r\n  }\r\n}\r\n@media only screen and (max-width: 900px) {\r\n  .content {\r\n    width: 80%;\r\n  }\r\n}\r\n@media only screen and (max-width: 800px) {\r\n  .content {\r\n    width: 85%;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 600px) {\r\n  .content {\r\n    height: 100%;\r\n  }\r\n}\r\n</style>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({});\r\n","import { render } from \"./index.vue?vue&type=template&id=588d6188&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=588d6188&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-588d6188\"\n\nexport default script","<template>\r\n  <div id=\"devblog\">\r\n    <div id=\"navbar\">\r\n      <router-link to=\"/\" custom v-slot=\"{ navigate }\">\r\n        <img\r\n          @click=\"navigate\"\r\n          title=\"Art by Adam Mawby!\"\r\n          class=\"face\"\r\n          src=\"@/assets/about/digital_face.png\"\r\n          role=\"link\"\r\n        />\r\n      </router-link>\r\n      <div class=\"title-container\">\r\n        <div class=\"title\">michael bitzos <span>[devblog]</span></div>\r\n        <div class=\"subtitle is-5\">\r\n          writin' about gamedev.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div id=\"navbar-border\" />\r\n    <div id=\"navbar-border\" class=\"second\" />\r\n    <div id=\"main-content\">\r\n      <div id=\"sidebar-expander\" :class=\"{ open: open }\">\r\n        {{ !open ? \"&#8250;\" : \"&#8249;\" }}\r\n        <div @click=\"toggleOpen\" />\r\n      </div>\r\n      <div id=\"sidebar-container\" :class=\"{ open: open }\">\r\n        <sidebar />\r\n      </div>\r\n      <div id=\"blackout\" @click=\"open = false\" :class=\"{ show: open }\"></div>\r\n      <div id=\"sidebar-border\" />\r\n      <div id=\"sidebar-dot\"></div>\r\n      <div id=\"post-container\">\r\n        <router-view :key=\"$route.fullPath\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport sidebar from \"./components/sidebar.vue\";\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({\r\n  components: { sidebar },\r\n  data() {\r\n    return {\r\n      open: false\r\n    };\r\n  },\r\n  methods: {\r\n    toggleOpen() {\r\n      this.open = !this.open;\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#devblog {\r\n  width: 65%;\r\n  font-size: 18px;\r\n  padding-top: 2em;\r\n  padding-bottom: 2em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n#navbar {\r\n  justify-content: flex-start;\r\n  flex-direction: row;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 10px;\r\n  padding-left: 15px;\r\n\r\n  .face {\r\n    margin: 10px;\r\n    margin-right: 30px;\r\n    image-rendering: pixelated;\r\n    width: 100px;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .title-container {\r\n    margin-top: 20px;\r\n    .title,\r\n    .subtitle {\r\n      margin-top: 0px;\r\n      margin-bottom: 0px;\r\n    }\r\n    .title {\r\n      margin-right: 0.5em;\r\n      font-family: Akagi-Black;\r\n      font-size: 40px;\r\n\r\n      span {\r\n        font-size: smaller;\r\n        color: gray;\r\n        font-size: 20px;\r\n      }\r\n    }\r\n    .subtitle {\r\n      font-size: 20px;\r\n\r\n      span {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n$grad: 0%;\r\n$sidebar-width-small: 200px;\r\n$sidebar-width: 250px;\r\n$sidebar-transition: 0.2s;\r\n\r\n#navbar-border {\r\n  height: 1px;\r\n  width: 100%;\r\n  $end-grad: rgba($pink, $border-opacity) $grad;\r\n  $start-grad: transparent 0%;\r\n  background: linear-gradient(-90deg, $start-grad, $end-grad);\r\n  flex-shrink: 0;\r\n\r\n  &.second {\r\n    margin-top: 5px;\r\n  }\r\n}\r\n#sidebar-border {\r\n  width: 1px;\r\n  $end-grad: rgba($pink, $border-opacity) $grad;\r\n  $start-grad: transparent 0%;\r\n  background: linear-gradient(0deg, $start-grad, $end-grad);\r\n  flex-shrink: 0;\r\n}\r\n\r\n#sidebar-dot {\r\n  width: 10px;\r\n  height: 10px;\r\n  flex-shrink: 0;\r\n  background-image: linear-gradient(\r\n    to top left,\r\n    transparent 50%,\r\n    rgba($pink, 0.5) 0\r\n  );\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  background-position: left, right;\r\n}\r\n\r\n#main-content {\r\n  justify-content: flex-start;\r\n  flex-direction: row;\r\n  display: flex;\r\n  align-items: stretch;\r\n\r\n  #blackout {\r\n    position: fixed;\r\n    z-index: 100;\r\n    background-color: transparent;\r\n    pointer-events: none;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    top: 0;\r\n    left: 0;\r\n    transition: background-color $sidebar-transition;\r\n\r\n    &.show {\r\n      background-color: rgba(black, 0.5);\r\n      pointer-events: unset;\r\n    }\r\n  }\r\n  #sidebar-expander {\r\n    position: fixed;\r\n    top: 40%;\r\n    left: 0;\r\n    width: 2.5%;\r\n    height: 100px;\r\n    background-color: #fcd8f4;\r\n    border-color: $pink;\r\n    border: 1px solid rgba($pink, 0.5);\r\n    border-left: 0;\r\n    border-right: 0;\r\n    z-index: 102;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: $pink;\r\n    font-size: 30px;\r\n\r\n    visibility: hidden;\r\n    transition: left $sidebar-transition;\r\n\r\n    &.open {\r\n      left: $sidebar-width;\r\n      border-right: 1px;\r\n    }\r\n    div {\r\n      position: absolute;\r\n      background-color: transparent;\r\n      width: 50px;\r\n      height: 100px;\r\n    }\r\n  }\r\n  #sidebar-container {\r\n    width: 250px;\r\n    flex-shrink: 0;\r\n  }\r\n  #post-container {\r\n    overflow: hidden;\r\n  }\r\n\r\n  #sidebar-container,\r\n  #post-container {\r\n    padding: 30px;\r\n    padding-top: 30px;\r\n  }\r\n}\r\n\r\n/** RESPONSIVE **/\r\n@media screen and (max-width: 1600px) {\r\n  #devblog {\r\n    width: 75%;\r\n\r\n    #sidebar-container {\r\n      width: $sidebar-width-small;\r\n    }\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 1200px) {\r\n  #devblog {\r\n    width: 95%;\r\n\r\n    #main-content {\r\n      #post-container {\r\n        padding: 15px;\r\n        padding-top: 30px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 850px) {\r\n  #devblog {\r\n    #sidebar-container {\r\n      position: fixed;\r\n      background: white;\r\n      height: 100%;\r\n      width: $sidebar-width;\r\n      z-index: 101;\r\n      top: 0;\r\n      left: -$sidebar-width;\r\n      border-right: 1px solid $pink;\r\n      &.open {\r\n        left: 0px;\r\n      }\r\n      transition: left $sidebar-transition;\r\n    }\r\n    #navbar-border.second {\r\n      // display: none;\r\n    }\r\n    #main-content {\r\n      #sidebar-expander {\r\n        visibility: visible;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 600px) {\r\n  #navbar {\r\n    .face {\r\n      width: 70px;\r\n    }\r\n    .title-container {\r\n      .title {\r\n        font-size: 30px;\r\n        span {\r\n          font-size: 20px;\r\n        }\r\n      }\r\n      .subtitle {\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 500px) {\r\n  #navbar {\r\n    padding-bottom: 0;\r\n    .title-container {\r\n      padding-bottom: 20px;\r\n    }\r\n    .face {\r\n      width: 50px;\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 450px) {\r\n  #navbar {\r\n    // .face {\r\n    //   width: 50px;\r\n    //   margin-right: 15px;\r\n    // }\r\n    .title-container {\r\n      .title {\r\n        font-size: 25px;\r\n        span {\r\n          font-size: 15px;\r\n        }\r\n      }\r\n      .subtitle {\r\n        font-size: 15px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div id=\"sidebar\">\r\n    <div class=\"title is-6\">\r\n      Articles\r\n    </div>\r\n    <ul class=\"articles\">\r\n      <li v-for=\"article in articles\" :key=\"article.key\">\r\n        <div v-if=\"isSelected(article)\">\r\n          {{ article.title }}\r\n        </div>\r\n        <router-link v-else :to=\"`/devblog/${article.key}`\">{{\r\n          article.title\r\n        }}</router-link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"@vue/runtime-core\";\r\nimport Posts from \"../posts/index\";\r\nimport { Post } from \"@/types\";\r\nconst posts = [...Posts];\r\nposts.reverse();\r\nexport default defineComponent({\r\n  data() {\r\n    return {\r\n      articles: posts\r\n    };\r\n  },\r\n  methods: {\r\n    isSelected(post: Post) {\r\n      return post.key == this.$route.name;\r\n    }\r\n  }\r\n});\r\n</script>\r\n<style lang=\"scss\">\r\n#sidebar {\r\n  height: 100%;\r\n\r\n  .title {\r\n    text-decoration: underline;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .articles {\r\n    margin-left: 20px;\r\n    list-style: circle;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div>\r\n    <p>\r\n      Hey everyone. My name is Michael, welcome to my devblog where I will be\r\n      writing about my game development experience over the past 5 years. At the\r\n      time of writing this I am taking a break from gamedev to focus on other\r\n      things, one of which is this blog.\r\n    </p>\r\n    <h2 id=\"background\">Background</h2>\r\n    <p>\r\n      My friends and I formed an indie game studio called Overlook Studios\r\n      during our third year of university and began working on 2D games in\r\n      Unity. With a seemingly endless supply of motivation and creativity, we\r\n      were driven by passion and the desire to learn how to make games.\r\n    </p>\r\n    <p>\r\n      Over the years, we worked on various projects ranging from an atmospheric\r\n      survival horror game to a rhythm-based beat-em-up roguelike.\r\n    </p>\r\n    <p>The team:</p>\r\n    <ul>\r\n      <li>Michael Bitzos - Lead programmer</li>\r\n      <li>\r\n        <a href=\"https://www.artstation.com/pixelgrim\" target=\"_blank\"\r\n          >Adam Mawby</a\r\n        >\r\n        - Artist\r\n      </li>\r\n      <li>Ben Petkovsek - Designer/Programmer</li>\r\n      <li>Cole Bondarewski - Music/SFX</li>\r\n    </ul>\r\n    <p>Now you might be asking:</p>\r\n    <p><em>\"What games did you release?\"</em></p>\r\n    <p>And the answer is:</p>\r\n    <p><strong>None.</strong></p>\r\n    <p>\r\n      Even though our projects weren't finished, there is still a thousand hours\r\n      of hard work, a hundred thousand lines of code, and a large repository of\r\n      knowledge that can be learned from.\r\n    </p>\r\n    <h2 id=\"purpose\">Purpose</h2>\r\n    <p>\r\n      My goal is to share my experiences as the lead programmer for my team as\r\n      well as how I incorporated my education and professional experience as a\r\n      software engineer into designing the systems for the various core gameplay\r\n      frameworks, features, and mechanics needed for our projects.\r\n    </p>\r\n    <p>\r\n      This blog is for anyone with a decent understanding of programming who is\r\n      struggling to make games because of the challenges they face writing\r\n      clean, maintainable, and scalable code. There will be an overarching focus\r\n      on the technical skills of making 2D games in the Unity engine.\r\n    </p>\r\n    <p>\r\n      With any luck, you can learn from some of the lessons I've learned so that\r\n      your technical abilities are not the reason you can't complete your dream\r\n      game.\r\n    </p>\r\n    <h2 id=\"conclusion\">Conclusion</h2>\r\n    <p>\r\n      If you continue to read this blog, thank you for following me, hopefully\r\n      reading about my challenges will help you overcome yours.\r\n    </p>\r\n    <p>\r\n      If you have any questions feel free to contact me:\r\n      <a href=\"mailto:m.bitzos@gmail.com\">m.bitzos@gmail.com</a>\r\n    </p>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport PostImageComponent from \"@/views/devblog/components/image.vue\";\r\nimport CodeBlock from \"@/views/devblog/components/code.vue\";\r\nexport default defineComponent({\r\n  components: {\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    PostImageComponent,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    CodeBlock\r\n  }\r\n});\r\n</script>\r\n<style lang=\"scss\"></style>\r\n","<template>\r\n  <div class=\"post-image\">\r\n    <img :src=\"require(`@/assets/${image.uri}`)\" :style=\"image.style || {}\" />\r\n    <div class=\"subtitle is-6\" v-if=\"image.subtitle\" v-html=\"image.subtitle\" />\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport { PostImage } from \"@/types\";\r\nexport default defineComponent({\r\n  props: {\r\n    image: {\r\n      type: Object as () => PostImage,\r\n      required: true\r\n    }\r\n  }\r\n});\r\n</script>\r\n<style lang=\"scss\">\r\n.post-image {\r\n  width: 100%;\r\n  text-align: center;\r\n  img {\r\n    width: 100%;\r\n  }\r\n\r\n  .subtitle {\r\n    font-style: italic;\r\n  }\r\n}\r\n</style>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nimport { PostImage } from \"@/types\";\r\nexport default defineComponent({\r\n  props: {\r\n    image: {\r\n      type: Object as () => PostImage,\r\n      required: true\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./image.vue?vue&type=template&id=df2d428e\"\nimport script from \"./image.vue?vue&type=script&lang=ts\"\nexport * from \"./image.vue?vue&type=script&lang=ts\"\n\nimport \"./image.vue?vue&type=style&index=0&id=df2d428e&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"code-block\" ref=\"mySlot\">\r\n    <FontAwesomeIcon\r\n      icon=\"fa-regular fa-copy\"\r\n      class=\"copy-icon\"\r\n      @click=\"copy\"\r\n    />\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({\r\n  components: { FontAwesomeIcon },\r\n  data() {\r\n    return {\r\n      code: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    async copy() {\r\n      await navigator.clipboard.writeText(this.code);\r\n    }\r\n  },\r\n  mounted() {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    this.code = (this.$refs.mySlot as any).textContent;\r\n  }\r\n});\r\n</script>\r\n<style lang=\"scss\">\r\n.code-block {\r\n  position: relative;\r\n\r\n  .copy-icon {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    color: white;\r\n    transition: 0.2s;\r\n\r\n    &:hover {\r\n      color: $pink;\r\n    }\r\n  }\r\n  pre {\r\n    padding: 0;\r\n    margin-top: 1em;\r\n    margin-bottom: 1em;\r\n  }\r\n}\r\n</style>\r\n","\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({\r\n  components: { FontAwesomeIcon },\r\n  data() {\r\n    return {\r\n      code: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    async copy() {\r\n      await navigator.clipboard.writeText(this.code);\r\n    }\r\n  },\r\n  mounted() {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    this.code = (this.$refs.mySlot as any).textContent;\r\n  }\r\n});\r\n","import { render } from \"./code.vue?vue&type=template&id=5b79510b\"\nimport script from \"./code.vue?vue&type=script&lang=ts\"\nexport * from \"./code.vue?vue&type=script&lang=ts\"\n\nimport \"./code.vue?vue&type=style&index=0&id=5b79510b&lang=scss\"\nscript.render = render\n\nexport default script","\r\nimport { defineComponent } from \"vue\";\r\nimport PostImageComponent from \"@/views/devblog/components/image.vue\";\r\nimport CodeBlock from \"@/views/devblog/components/code.vue\";\r\nexport default defineComponent({\r\n  components: {\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    PostImageComponent,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    CodeBlock\r\n  }\r\n});\r\n","import { render } from \"./introductions.vue?vue&type=template&id=77e5d12e\"\nimport script from \"./introductions.vue?vue&type=script&lang=ts\"\nexport * from \"./introductions.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { Post } from \"@/types\";\r\nimport { markRaw } from \"vue\";\r\nimport PostContent from \"./introductions.vue\";\r\n\r\nconst post: Post = markRaw({\r\n  title: \"Introduction to my devblog\",\r\n  tags: [\"misc\"],\r\n  date: new Date(\"2022-10-10T16:42:08.476Z\"),\r\n  component: PostContent,\r\n  key: \"introductions\"\r\n});\r\n\r\nexport default post;\r\n","<template>\r\n  <div>\r\n    <p>\r\n      One of the biggest mistakes beginner programmers make is defining classes\r\n      and functions with too many responsibilities. For game developers this is\r\n      often seen in the code that models your main playable entity in the game,\r\n      ie the player controller. By managing too many responsibilities in a\r\n      single place you are making it harder for yourself to grow, maintain, and\r\n      debug your codebase.\r\n    </p>\r\n    <p>\r\n      With the accessibility of Unity's pre-built update loops\r\n      (<code>Update</code>, <code>FixedUpdate</code>, <code>LateUpdate</code>)\r\n      it is extremely easy to find yourself writing an unwieldy amount of code\r\n      to control your player in a single class. With an unorganized mess of\r\n      <code>if/elses</code>, edge cases, and a string of mechanics interspersed\r\n      within one another, this becomes a nightmare in the present, and untenable\r\n      in the future.\r\n    </p>\r\n    <p>\r\n      Online Unity tutorials and introductory materials tend to stress the use\r\n      of the <code>Update</code> method for showcasing code. Placing large\r\n      chunks of code here gives newcomers the impression that this is where the\r\n      bulk of code should reside. These tutorials meant to show you snippets of\r\n      prototype implementations fail to demonstrate the kind of infrastructure\r\n      needed to work on long term projects with evolving requirements, nor\r\n      should they.\r\n    </p>\r\n    <p>\r\n      This is one of difficulties I experienced when first getting into Unity\r\n      and learning programming. The steps below breakdown how I am able to build\r\n      a player controller beyond the prototype by utilizing finite state\r\n      machines to cleanly manage my player states all while avoiding any of the\r\n      mess of <code>if/else</code> or <code>switch</code> statements.\r\n    </p>\r\n    <h2 id=\"finitestatemachines\">Finite state machines</h2>\r\n    <p>\r\n      A finite state machine (FSM) is a mathematical model described as a system\r\n      that contains states, a reference to the current state, transitions\r\n      connecting states together, and inputs/conditions that trigger the\r\n      transition from one state to another. If you have any experience creating\r\n      animations in Unity, Mecanim is a perfect example of what a state machine\r\n      accomplishes.\r\n    </p>\r\n    <p>\r\n      A lot of game mechanics are implicitly designed as some form of a state\r\n      machine since most things in a game are intrinsically stateful. They\r\n      contain some model data that when some conditions are met will result in a\r\n      change in its behaviour.\r\n    </p>\r\n    <p>\r\n      <PostImageComponent\r\n        class=\"post-image\"\r\n        :image=\"{\r\n          uri: 'posts/fsm-player-controllers/fsm-locked-door.jpg',\r\n          subtitle: 'A locked door in a game modelled as a basic FSM'\r\n        }\"\r\n      />\r\n    </p>\r\n    <p>\r\n      <PostImageComponent\r\n        class=\"post-image\"\r\n        :image=\"{\r\n          uri: 'posts/fsm-player-controllers/fsm-quest.jpg',\r\n          subtitle: 'A questline in an RPG modelled as a basic FSM'\r\n        }\"\r\n      />\r\n    </p>\r\n    <p>\r\n      As you can see, it is very easy to design even the most basic mechanics as\r\n      FSMs because it allows you to break down complex problems into\r\n      understandable mental models. In the next section I will show how you can\r\n      create an FSM framework that will help you build out your player\r\n      controller.\r\n    </p>\r\n    <h2 id=\"theimplementation\">The implementation</h2>\r\n    <p>\r\n      The following are all essential classes you will need for your FSM\r\n      framework:\r\n    </p>\r\n    <h3 id=\"finitestatemachinecs\">FiniteStateMachine.cs</h3>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">/// &lt;summary&gt;\r\n/// Models a basic finite state machine\r\n/// Manages all the states in the FSM including transitions\r\n/// &lt;/summary&gt;\r\npublic class FiniteStateMachine {\r\n\r\n  Dictionary&lt;Type, State&gt; states = new Dictionary&lt;Type, State&gt;();\r\n\r\n  public State currentState {\r\n    get;\r\n    private set;\r\n  }\r\n  State defaultState;\r\n\r\n  PlayerController player;\r\n\r\n  /// &lt;summary&gt;\r\n  /// Constructs a new finite state machine\r\n  /// &lt;/summary&gt;\r\n  public FiniteStateMachine(PlayerController player) {\r\n    this.player = player;\r\n  }\r\n\r\n  /// &lt;summary&gt;\r\n  /// Initializes the FSM with the states \r\n  /// &lt;/summary&gt;\r\n  protected void setStates(List&lt;State&gt; states, State defaultState) {\r\n    this.states.Clear();\r\n    foreach (var state in states) {\r\n      this.states.Add(state.GetType(), state);\r\n    }\r\n    this.defaultState = defaultState;\r\n  }\r\n\r\n  /// &lt;summary&gt;\r\n  /// Starts the FSM\r\n  /// &lt;/summary&gt;\r\n  public void Start() {\r\n    this.ChangeState(defaultState);\r\n  }\r\n\r\n  /// &lt;summary&gt;\r\n  /// Triggers an update\r\n  /// &lt;/summary&gt;\r\n  public void Update() {\r\n    if (currentState != null)\r\n      currentState.Update();\r\n  }\r\n\r\n  /// &lt;summary&gt;\r\n  /// triggers a fixed Update\r\n  /// &lt;/summary&gt;\r\n  public void FixedUpdate() {\r\n    if (currentState != null)\r\n      currentState.FixedUpdate();\r\n  }\r\n\r\n  /// &lt;summary&gt;\r\n  /// Change to new state\r\n  /// &lt;/summary&gt;\r\n  /// &lt;typeparam name=\"S\"&gt;The state to change to&lt;/typeparam&gt;\r\n  public void ChangeState&lt;S&gt;() where S : State {\r\n    ChangeState(states[typeof(S)]);\r\n  }\r\n\r\n  /// &lt;summary&gt;\r\n  /// Change to new state\r\n  /// &lt;/summary&gt;\r\n  /// &lt;typeparam name=\"S\"&gt;The state to change to&lt;/typeparam&gt;\r\n  public void ChangeState(State state) {\r\n    if (currentState != null) {\r\n      currentState.OnExit();\r\n    }\r\n    currentState = state;\r\n    currentState.OnEnter();\r\n  }\r\n\r\n  /// &lt;summary&gt;\r\n  /// Changes to current state\r\n  /// &lt;/summary&gt;\r\n  public void ChangeToDefault() {\r\n    ChangeState(defaultState);\r\n  }\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      This is the main orchestrator of the states and is to be the singular\r\n      place we interface with the FSM framework. The FSM has basic functionality\r\n      including the ability to provide the current state, set a default one, and\r\n      of course change the current state.\r\n    </p>\r\n    <h3 id=\"statecs\">State.cs</h3>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">/// &lt;summary&gt;\r\n/// Models a state in a basic FSM\r\n/// &lt;/summary&gt;\r\npublic abstract class State {\r\n  protected FiniteStateMachine fsm;\r\n  protected PlayerController player;\r\n\r\n  public State(FiniteStateMachine fsm, PlayerController player) {\r\n    this.player = player;\r\n    this.fsm = fsm;\r\n  }\r\n\r\n  /// &lt;summary&gt;\r\n  /// What to do on entering the state\r\n  /// &lt;/summary&gt;\r\n  public abstract void OnEnter();\r\n\r\n  /// &lt;summary&gt;\r\n  /// What to do on exiting the state\r\n  /// &lt;/summary&gt;\r\n  public abstract void OnExit();\r\n\r\n  public abstract void Update();\r\n  public abstract void FixedUpdate();\r\n\r\n  /// &lt;summary&gt;\r\n  /// Goes to a new state (Wrapper for ChangeState)\r\n  /// &lt;/summary&gt;\r\n  public void Goto&lt;S&gt;() where S : State {\r\n    fsm.ChangeState&lt;S&gt;();\r\n  }\r\n\r\n  /// &lt;summary&gt;\r\n  /// Changes to default\r\n  /// &lt;/summary&gt;\r\n  public void GoToDefault() {\r\n    fsm.ChangeToDefault();\r\n  }\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      This is an abstract implementation of a single state in your FSM that\r\n      allows you implement it's lifecycle hooks via inheritance. Along with the\r\n      player it will also contain a reference to your FSM itself so that the\r\n      states can easily request to change to another state. You'll notice that\r\n      neither of these classes are extending from Unity's\r\n      <code>MonoBehaviour</code> class, meaning they will not function as\r\n      components you attach to your gameobjects. This will instead be used as a\r\n      basic C# object that gets instantiated and has its lifecycle methods\r\n      called via your <code>PlayerController</code>, below you can see an\r\n      example of this. This method is simply a preference of mine as I quite\r\n      enjoy the engine-agnostic aspect of this implementation.\r\n    </p>\r\n    <p>\r\n      I was interested in how this would look as a game object component so I\r\n      went ahead and created one\r\n      <a\r\n        href=\"https://github.com/mbitzos/devblog-code-examples/tree/main/fsm-player-controllers/monobehaviour-example\"\r\n        >here.</a\r\n      >\r\n      In retrospect I think this approach is better for Unity specifically since\r\n      <code>GetComponent</code> removes a lot of the boilerplate and lets us\r\n      utilize Unity's serialization for state class variables. For my next\r\n      project I'll be sure to try out this out to see how the two differ!\r\n    </p>\r\n    <p>\r\n      The rest of the article is independent of this decision so don't fret if\r\n      you decide to go with either implementation.\r\n    </p>\r\n    <p>\r\n      Another thing you'll notice is that my original definition of a FSM\r\n      contains the concept of \"states\" and \"transitions\". By comparison, my\r\n      implementation doesn't explicitly define transitions as I believe them to\r\n      be redundant for the use case of player state management. The focus of the\r\n      FSM implementation is to decouple player state from the controller, the\r\n      transitions are hardly the focus here and were less important for my\r\n      use-case as well. This solution provides a great balance of strict\r\n      separation of states with the freedom of transition control.\r\n    </p>\r\n    <h2 id=\"example\">Example</h2>\r\n    <p>\r\n      Below is a barebones example of how I would implement a FSM for a player\r\n      controller in an RPG.\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">/// &lt;summary&gt;\r\n/// Models a basic fsm for a player\r\n/// &lt;/summary&gt;\r\npublic class PlayerFSM : FiniteStateMachine {\r\n  public PlayerFSM(PlayerController player) : base(player) {\r\n    var defaultState = new DefaultState(this, player);\r\n    var states = new List&lt;State&gt;() {\r\n      defaultState,\r\n      new DashState(this, player),\r\n      new AttackState(this, player),\r\n      new DeathState(this, player),\r\n    };\r\n    setStates(states, defaultState);\r\n  }\r\n}\r\n\r\n/// &lt;summary&gt;\r\n/// Default state to control the player\r\n/// &lt;/summary&gt;\r\npublic class DefaultState : State {\r\n  public DefaultState(FiniteStateMachine fsm, PlayerController player) : base(fsm, player) { }\r\n\r\n  public override void FixedUpdate() { }\r\n\r\n  public override void OnEnter() { }\r\n\r\n  public override void OnExit() { }\r\n\r\n  public override void Update() {\r\n    if (Input.GetKeyDown(KeyCode.Space)) {\r\n      Goto&lt;DashState&gt;();\r\n    }\r\n    // handle basic player movement physics + animation\r\n  }\r\n}\r\n\r\n/// &lt;summary&gt;\r\n/// Models when the player is performing an attack \r\n/// &lt;/summary&gt;\r\npublic class AttackState : State {\r\n  public AttackState(FiniteStateMachine fsm, PlayerController player) : base(fsm, player) { }\r\n\r\n  public override void OnEnter() {\r\n    // Start attack animation\r\n  }\r\n\r\n  public override void OnExit() {\r\n    // End attack animation\r\n  }\r\n\r\n  public override void Update() { }\r\n\r\n  public override void FixedUpdate() {\r\n    // perform attack physics movement\r\n  }\r\n}\r\n\r\n/// &lt;summary&gt;\r\n/// Models the state when the player dashes\r\n/// &lt;/summary&gt;\r\npublic class DashState : State {\r\n  public DashState(FiniteStateMachine fsm, PlayerController player) : base(fsm, player) { }\r\n\r\n  public override void OnEnter() {\r\n    // start dash animation\r\n    // start i-frames\r\n  }\r\n\r\n  public override void OnExit() {\r\n    // stop i-frames\r\n  }\r\n\r\n  public override void FixedUpdate() {\r\n    // perform dash physics\r\n  }\r\n  public override void Update() { }\r\n}\r\n\r\n/// &lt;summary&gt;\r\n/// Models the state when the player is dead \r\n/// &lt;/summary&gt;\r\npublic class DeathState : State {\r\n  public DeathState(FiniteStateMachine fsm, PlayerController player) : base(fsm, player) { }\r\n\r\n  public override void OnEnter() {\r\n    // death animation\r\n    // game over\r\n    // stop inputs\r\n  }\r\n\r\n  public override void OnExit() { }\r\n\r\n  public override void Update() { }\r\n\r\n  public override void FixedUpdate() { }\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <h2 id=\"beyond\">Beyond</h2>\r\n    <p>\r\n      There is a ton we can do to further improve our FSM framework, it's up to\r\n      you whether these features could help in your use-case but I recommend all\r\n      of these for those that want to take their technical skills to the next\r\n      level.\r\n    </p>\r\n    <h3 id=\"utilizinggenerics\">Utilizing Generics</h3>\r\n    <p>\r\n      The above design is strictly for our player controller, but what if we\r\n      have other things in our game that want to utilize a FSM? One solution is\r\n      that we could design a FSM that expects to pass in a\r\n      <code>MonoBehaviour</code> object, but that would require us to cast it\r\n      everywhere.\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">public class ExampleState : State {\r\n  public ExampleState(FiniteStateMachine fsm, Monobehaviour stateObject) : base(fsm, stateObject) {}\r\n  public override void Update() {\r\n    PlayerController player = stateObject as PlayerController; // :'(\r\n    if (Input.GetKeyDown(KeyCode.Space)) {\r\n      player.DoSomethingSpecificToPlayer();\r\n    }\r\n  }\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      This is where the beauty of C#'s generics comes in to help us design an\r\n      object-agnostic FSM without the drawbacks mentioned above. If you are new\r\n      to generics I would suggest to first\r\n      <a\r\n        href=\"https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/types/generics\"\r\n        >read up on generics via the official C# documentation.</a\r\n      >\r\n    </p>\r\n    <p>\r\n      Essentially we change the definition of our FSM so that in our\r\n      implementation of our states and FSM we can specify which type of\r\n      <code>MonoBehaviour</code> we will be controlling.\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">/// &lt;summary&gt;\r\n/// Models the finite state machine using generics\r\n/// &lt;/summary&gt;\r\n/// &lt;typeparam name=\"SO\"&gt;[SO=State Object] This is the monobehaviour object that our FSM is controlling state for &lt;/typeparam&gt;\r\npublic class FiniteStateMachine&lt;SO&gt; where SO : MonoBehaviour {\r\n\r\n  Dictionary&lt;Type, State&lt;SO&gt;&gt; states = new Dictionary&lt;Type, State&lt;SO&gt;&gt;();\r\n\r\n  public State&lt;SO&gt; currentState {\r\n    get;\r\n    private set;\r\n  }\r\n  State&lt;SO&gt; defaultState;\r\n\r\n  // This is the object that our FSM is controlling state for\r\n  private SO stateObject;\r\n\r\n  /// &lt;summary&gt;\r\n  /// Constructs a new finite state machine\r\n  /// &lt;/summary&gt;\r\n  public FiniteStateMachine(SO stateObject) {\r\n    this.stateObject = stateObject;\r\n  }\r\n  ...\r\n}\r\n\r\n/// &lt;summary&gt;\r\n/// Models a state in an generic-powered FSM\r\n/// &lt;/summary&gt;\r\n/// &lt;typeparam name=\"SO\"&gt;[SO=State Object] This is the object that our FSM is controlling state for &lt;/typeparam&gt;\r\npublic abstract class State&lt;SO&gt; where SO : MonoBehaviour {\r\n  protected FiniteStateMachine&lt;SO&gt; fsm;\r\n  protected SO stateObject;\r\n\r\n  public State(FiniteStateMachine&lt;SO&gt; fsm, SO stateObject) {\r\n    this.stateObject = stateObject;\r\n    this.fsm = fsm;\r\n  }\r\n  ...\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      From there you can see how easy it is to use the same FSM framework for\r\n      different controllers.\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">// FSM for player controller\r\n#region Player\r\npublic class PlayerFSM : FiniteStateMachine&lt;PlayerController&gt; {\r\n  public PlayerFSM(PlayerController player) : base(player) {\r\n    // states\r\n  }\r\n}\r\npublic abstract class BasePlayerState : State&lt;PlayerController&gt; {\r\n  protected BasePlayerState(PlayerFSM fsm, PlayerController player) : base(fsm, player) { }\r\n}\r\npublic class DefaultState : BasePlayerState {\r\n  public DefaultState(PlayerFSM fsm, PlayerController player) : base(fsm, player) { }\r\n}\r\n\r\n#endregion\r\n\r\n// FSM for enemy controller\r\n#region Enemy\r\npublic class EnemyFSM : FiniteStateMachine&lt;EnemyController&gt; {\r\n  public EnemyFSM(EnemyController enemy) : base(enemy) {\r\n    // states\r\n  }\r\n}\r\npublic abstract class BaseEnemyState : State&lt;EnemyController&gt; {\r\n  protected BaseEnemyState(EnemyFSM fsm, EnemyController enemy) : base(fsm, enemy) { }\r\n}\r\npublic class DefaultState : BaseEnemyState {\r\n  public DefaultState(EnemyFSM fsm, EnemyController enemy) : base(fsm, enemy) { }\r\n}\r\n#endregion\r\n</code></pre>\r\n    </CodeBlock>\r\n    <h3 id=\"onenterpayload\">OnEnter Payload</h3>\r\n    <p>\r\n      One thing our original implementation lacks is the ability for our states\r\n      to retrieve data via transitions. An example could be if you designed a\r\n      knockback state for your player upon receiving damage and needed the\r\n      specific attack data to control the physics behaviour of the hit.\r\n    </p>\r\n    <p>\r\n      We can accomplish this easily by introducing a \"payload\" parameter in our\r\n      <code>ChangeState</code> methods that then gets passed to the State's\r\n      <code>OnEnter</code> method. Here I am defining the payload as\r\n      <code>object</code> and building a helper function to cast it. You could\r\n      instead use a <code>Dictionary</code> if you prefer json-style data.\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">public class FiniteStateMachine {\r\n  ...\r\n  public void ChangeState(State state, object payload = null) {\r\n    if (currentState != null) {\r\n      currentState.OnExit();\r\n    }\r\n    currentState = state;\r\n    currentState.OnEnter(payload);\r\n  }\r\n  ...\r\n}\r\n\r\npublic abstract class State {\r\n  ...\r\n  // Helper func to fetch and get the payload\r\n  // will default if payload incorrectly is not found/casted\r\n  protected P CastPayload&lt;P&gt;(object payload, P defaultt = default(P)) {\r\n    try {\r\n      return (P) payload;\r\n    } catch {\r\n      return defaultt;\r\n    }\r\n  }\r\n  ...\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      One drawback of this is that loosely defined data structures is prone to\r\n      regression bugs. As a solo developer I never ran into issues but in an\r\n      expanding team of developers one can see how bugs could arise if the\r\n      payload or the payload cast was changed independently of one another. Unit\r\n      tests would catch this, but I know none of us are writing those.\r\n    </p>\r\n    <p>\r\n      You could probably design a more robust payload system using generics but\r\n      I have not attempted this yet since it was overkill for me.\r\n    </p>\r\n    <h3 id=\"statepriority\">State priority</h3>\r\n    <p>\r\n      A more niche thing I've done before is introduce the concept of state\r\n      priority such that during <code>ChangeState</code> the FSM will only ever\r\n      change the current state if the next state's priority is greater. This is\r\n      useful if you have many transitions into a single state that can occur\r\n      under the same conditions. Instead of writing behaviour outside the FSM to\r\n      decide if the state should be changed, this can easily be done in the FSM\r\n      framework. To be honest I personally found this was mostly unused in my\r\n      projects.\r\n    </p>\r\n    <p>Here is what the FSM and State would look like:</p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">public class FiniteStateMachine {\r\n  ...\r\n  // now returns if the state changed successfully\r\n  public bool ChangeState(State state) {\r\n    if (currentState != null &amp;&amp; currentState.priority &gt; state.priority)\r\n      return false;\r\n    if (currentState != null) {\r\n      currentState.OnExit();\r\n    }\r\n    currentState = state;\r\n    currentState.OnEnter();\r\n    return true;\r\n  }\r\n  ...\r\n}\r\n\r\npublic abstract class State {\r\n  ...\r\n  public int priority {\r\n    get;\r\n    private set;\r\n  }\r\n\r\n  public State(FiniteStateMachine fsm, PlayerController player, int priority = -1) {\r\n    this.player = player;\r\n    this.fsm = fsm;\r\n    this.priority = priority;\r\n  }\r\n  ...\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <h3 id=\"transitionextras\">Transition extras</h3>\r\n    <p>\r\n      Right now the implementation leaves states in the dark regarding why an\r\n      outside transition occurred.\r\n    </p>\r\n    <p>\r\n      One useful thing we can do is allow our states to capture two pieces of\r\n      information:\r\n    </p>\r\n    <ol>\r\n      <li>\r\n        <p>the next/previous state that is being changed to:</p>\r\n        <p>\r\n          a. The next/previous state is useful for specific use cases, but I\r\n          would say that if this is needed more often than not it would probably\r\n          be a better idea to go with a FSM framework that requires strictly\r\n          defined transitions.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>if this current state was interrupted:</p>\r\n        <p>\r\n          a. This can be very important because it lets a state define the\r\n          difference between a graceful exit and a forceful one. It's ultimately\r\n          better to design your states such that your <code>OnExit</code> cleans\r\n          up the state regardless of how it's exited, but this solution offers a\r\n          quick shortcut to solve applicable edgecases.\r\n        </p>\r\n      </li>\r\n    </ol>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">// Models a FSM that has some extra transition data\r\npublic class FiniteStateMachine {\r\n  ...\r\n  /// &lt;summary&gt;\r\n  /// Change to new state\r\n  /// &lt;/summary&gt;\r\n  /// &lt;param name=\"state\"&gt;&lt;/param&gt;\r\n  /// &lt;param name=\"source\"&gt;The state that called for this change, default is null if the signal came from outside the FSM&lt;/param&gt;\r\n  /// &lt;returns&gt;if state change was successful&lt;/returns&gt;\r\n  public bool ChangeState(State state, State source = null) {\r\n    if (currentState != null &amp;&amp; currentState.priority &gt; state.priority)\r\n      return false;\r\n    if (currentState != null) {\r\n      interrupt = currentState != source\r\n      currentState.OnExit(interrupt, state);\r\n    }\r\n    previousState = state;\r\n    currentState = state;\r\n    currentState.OnEnter(previousState);\r\n    return true;\r\n  }\r\n  ...\r\n}\r\n\r\n// Models a FSM state that has some extra transition data\r\npublic abstract class State {\r\n  ...\r\n  /// &lt;summary&gt;\r\n  /// What to do on entering the state\r\n  /// &lt;/summary&gt;\r\n  public abstract void OnEnter(State previousState);\r\n\r\n  /// &lt;summary&gt;\r\n  /// What to do on exiting the state\r\n  /// &lt;/summary&gt;\r\n  public abstract void OnExit(bool interrupted, State nextState);\r\n\r\n  /// &lt;summary&gt;\r\n  /// Goes to a new state (Wrapper for ChangeState)\r\n  /// &lt;/summary&gt;\r\n  public void Goto&lt;S&gt;() where S : State {\r\n    fsm.ChangeState&lt;S&gt;(this); // results in an uninterrupted exit\r\n  }\r\n  ...\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <h2 id=\"lessonslearned\">Lessons learned</h2>\r\n    <ol>\r\n      <li>\r\n        <p>\r\n          Writing poorly designed mechanically dense states in a FSM will simply\r\n          offload your problems from the Update loop. The FSM is a tool but\r\n          unlocking its potential is being able to effectively break down your\r\n          controller into decoupled states.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Decide early where you want to store your player model. It may seem\r\n          obvious to have all of your player functions and properties in their\r\n          respective state classes. However if those same functions need to be\r\n          accessible from other places you should consider moving them to your\r\n          PlayerController. One core rule of this FSM implementation is to never\r\n          directly call functions and data in your state classes. If you do this\r\n          you'll quickly understand that it's messy and is considered a failure\r\n          in state design.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Don't be afraid to use your engine's tools, they're there to help you\r\n          make games faster and easier. I personally learned while writing this\r\n          article how the <code>MonoBehaviour</code> approach to my FSM\r\n          implementation is superior as it provides more functionality with less\r\n          boilerplate code.\r\n        </p>\r\n      </li>\r\n    </ol>\r\n    <h2 id=\"conclusion\">Conclusion</h2>\r\n    <p>\r\n      It is entirely possible to make a game with a single script for your\r\n      player controller and it is not the determining factor for your games\r\n      completion or success. Celeste is an example of a successful title\r\n      <a\r\n        href=\"https://github.com/NoelFB/Celeste/blob/master/Source/Player/Player.cs\"\r\n        >that has a single 5400 lined player controller script,</a\r\n      >\r\n      but I have no doubt there were great difficulties revolving around this.\r\n      While it is not the only or last example of this, every step we can make\r\n      as developers to improve our technical skills will result in fewer times\r\n      we are limited in creating the dream game we all desire to make. Using\r\n      FSMs is but just one example of doing so by designing a robust player\r\n      controller that allows you to develop easily understandable yet complex\r\n      mechanics for your player while maintaining the integrity of your\r\n      ever-expanding code.\r\n    </p>\r\n    <p>\r\n      All of the code examples in this article can be found\r\n      <a\r\n        href=\"https://github.com/mbitzos/devblog-code-examples/tree/main/fsm-player-controllers\"\r\n        >here on my GitHub.</a\r\n      >\r\n    </p>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport PostImageComponent from \"@/views/devblog/components/image.vue\";\r\nimport CodeBlock from \"@/views/devblog/components/code.vue\";\r\nexport default defineComponent({\r\n  components: {\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    PostImageComponent,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    CodeBlock\r\n  }\r\n});\r\n</script>\r\n<style lang=\"scss\"></style>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nimport PostImageComponent from \"@/views/devblog/components/image.vue\";\r\nimport CodeBlock from \"@/views/devblog/components/code.vue\";\r\nexport default defineComponent({\r\n  components: {\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    PostImageComponent,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    CodeBlock\r\n  }\r\n});\r\n","import { render } from \"./fsm-player-controllers.vue?vue&type=template&id=0f6d6c94\"\nimport script from \"./fsm-player-controllers.vue?vue&type=script&lang=ts\"\nexport * from \"./fsm-player-controllers.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { Post } from \"@/types\";\r\nimport { markRaw } from \"vue\";\r\nimport PostContent from \"./fsm-player-controllers.vue\";\r\n\r\nconst post: Post = markRaw({\r\n  title: \"Using finite state machines to build scalable player controllers\",\r\n  tags: [\"code\", \"c#\", \"unity\"],\r\n  mainImage: {\r\n    uri: \"posts/fsm-player-controllers/cover.jpg\",\r\n    subtitle: \"A very basic state machine for a platformer player controller\"\r\n  },\r\n  date: new Date(\"2022-11-15T04:30:45.378Z\"),\r\n  component: PostContent,\r\n  key: \"fsm-player-controllers\"\r\n});\r\n\r\nexport default post;\r\n","<template>\r\n  <div>\r\n    <p>\r\n      Over the years, I have grown to appreciate and love the art of writing\r\n      code to solve problems. It feels more natural to me to approach things\r\n      programmatically. While I love everything Unity’s editor tools offer,\r\n      nothing will ever beat the satisfaction of building games within an IDE.\r\n      When it comes to creating visually dependent mechanics and experiences in\r\n      my games, I build dynamic code-driven solutions that allow me to have the\r\n      level of control I need for rapid development.\r\n    </p>\r\n    <p>\r\n      In a more utilitarian definition, an animation is a sequence of explicitly\r\n      defined states (frames) of an entity and its properties against a\r\n      timescale. Controlling the ultra-precise dash movement in a 2D\r\n      metroidvania, handcrafting the timing of shader and particle effects\r\n      triggered during an ultimate attack, or having the flickering lights in a\r\n      dark room build the ambience in your horror game- all of these examples\r\n      can be interpreted as forms of dynamic animation.\r\n    </p>\r\n    <p>\r\n      After a few years of building 2D games, I've learned to write dynamic\r\n      animated events that can interface with surrounding systems. This not only\r\n      results in the creation of more complex gameplay features, but saves time\r\n      that would otherwise be more beneficial in other areas of the game. In my\r\n      attempts to accomplish this within the Unity Animator I discovered a\r\n      limitation: time. Building many variations of the same animation with\r\n      transitions/blendtrees connecting them can give the illusion to the player\r\n      that it is dynamic. Although, this isn’t always feasible or practical, as\r\n      well as there being a fundamental limitation relying on statically defined\r\n      animations. In this article I will go over how I instead use the power of\r\n      coroutines to write programmatic animations so you can create these\r\n      gameplay mechanics easily and ultimately with more control.\r\n    </p>\r\n    <p>\r\n      <em\r\n        >NOTE: When I refer to animations in the scope of this article I am\r\n        <strong>not</strong> referring to sprite animations. The Animator is how\r\n        I accomplish this as it works best for me, but I do eventually want to\r\n        explore solutions that move away from that. With that being said, I have\r\n        heard of\r\n        <a href=\"https://kybernetik.com.au/animancer/\" target=\"_blank\"\r\n          >Animancer by Kybernetik</a\r\n        >\r\n        that is an asset for Unity to replace the animator using a code-driven\r\n        approach. While I have not personally used it extensively I think the\r\n        idea of it is very powerful and worth checking out.</em\r\n      >\r\n    </p>\r\n    <h3 id=\"thecoroutine\">The Coroutine</h3>\r\n    <p>\r\n      Without diving into the technical know-how of what a coroutine is, as a\r\n      developer all you care about is that a coroutine lets you easily write\r\n      code that seemingly runs in its own update loop. Despite what that may\r\n      imply it is NOT a multi-threaded or multi-processed operation as it still\r\n      runs on the main thread, it will not offer any of the benefits of\r\n      parallelism. The true power of the coroutines comes from its intuitive\r\n      developer experience when writing time-dependent code. If you have ever\r\n      attempted to write even the most basic logic involving time in an Update\r\n      loop, you’ll know it’s a nightmare. By comparison, coroutines allow you to\r\n      accomplish the same in just a few lines of readable code.\r\n    </p>\r\n    <p>\r\n      Once you've mastered the power of the <code>yield</code> statement in\r\n      coroutines, there’s no limit to what you can create.\r\n    </p>\r\n    <ul>\r\n      <li><code>yield return null</code> -&gt; Waits a single update frame.</li>\r\n      <li>\r\n        <code>yield return new WaitForFixedUpdate()</code> -&gt; Waits for the\r\n        fixed update frame, should be used for situations involving physics.\r\n      </li>\r\n      <li>\r\n        <code>yield return new WaitForEndOfFrame()</code> -&gt; Similar to\r\n        <code>LateUpdate</code> but for coroutines, useful for when you need to\r\n        wait for rendering and physics to be completed.\r\n      </li>\r\n      <li>\r\n        <code>yield return new WaitForSeconds()/WaitForSecondsRealtime()</code>\r\n        -&gt; Halts the coroutine for a period of time, for our use case this\r\n        allows us to add timed pauses similar to spacing out frames in an\r\n        animation.\r\n      </li>\r\n      <li>\r\n        <code>yield return new WaitUntil()/WaitWhile()</code> -&gt; Not\r\n        something I've ever used for animations, I can see this being more\r\n        useful for other applications.\r\n      </li>\r\n    </ul>\r\n    <p>\r\n      These are nice and all but one thing that can't easily be done is\r\n      controlling how a property changes from one value to the another over a\r\n      period of time- a fundamental concept in animation.\r\n    </p>\r\n    <h3 id=\"lerp\">Lerp</h3>\r\n    <p>\r\n      Lerping is the process of following a linear interpolation between two\r\n      data points where given a value <code>a</code>, <code>b</code>, and\r\n      <code>t</code> will return you <code>a + (b-a) * t</code>. If that doesn't\r\n      really make sense I don't blame you. As a game developer I imagine lerps\r\n      as a straight line that can be traversed from one end to another, and the\r\n      <code>t</code> parameter representing the percentage \"progress\" along that\r\n      line within the range [0,1]. <code>t=0</code> is the start of the line,\r\n      <code>t=0.5</code> is in the middle, and <code>t=1</code> is the end.\r\n    </p>\r\n    <p>\r\n      Lerping gives us the power to control how a property can move from one\r\n      value to another, and when mapped over a period of time represents the\r\n      animated transition of that property. To actually utilise lerping inside\r\n      coroutines I wrote this very simple util that given a duration, controls\r\n      the timing needed for lerps on a per-frame basis.\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">public static class CoroutineUtils {\r\n\r\n  /// &lt;summary&gt;\r\n  /// provides a util to easily control the timing of a lerp over a duration\r\n  /// &lt;/summary&gt;\r\n  /// &lt;param name=\"duration\"&gt;How long our lerp will take&lt;/param&gt;\r\n  /// &lt;param name=\"action\"&gt;The action to perform per frame of the lerp, is given the progress t in [0,1]&lt;/param&gt;\r\n  public static IEnumerator Lerp(float duration, Action&lt;float&gt; action) {\r\n    float time = 0;\r\n    while (time &lt; duration) {\r\n      float delta = Time.deltaTime;\r\n      float t = (time + delta &gt; duration) ? 1 : (time / duration);\r\n      action(t);\r\n      time += delta;\r\n      yield return null;\r\n    }\r\n    // handle the last frame\r\n    action(1);\r\n  }\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      <em\r\n        >NOTE: The name of the util is a bit misleading since it doesn't\r\n        actually perform the lerp, given that it's always used with one I\r\n        figured it's a fitting name.</em\r\n      >\r\n    </p>\r\n    <p>The util can than be easily used as shown in this simple example:</p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">private IEnumerator animation() {\r\n  const float InitialDelay = 5;\r\n  const float EndDelay = 5;\r\n  const float TransitionTime = 5;\r\n  Color StartColor = Color.white;\r\n  Color EndColor = Color.red;\r\n  yield return new WaitForSeconds(InitialDelay);\r\n\r\n  // Lerp the renderer's color from white -&gt; red -&gt; white\r\n  yield return CoroutineUtil.Lerp(TransitionTime / 2, t =&gt; {\r\n    this.renderer.color = Color.Lerp(StartColor, EndColor, t);\r\n  });\r\n  yield return CoroutineUtil.Lerp(TransitionTime / 2, t =&gt; {\r\n    this.renderer.color = Color.Lerp(EndColor, StartColor, t);\r\n  });\r\n\r\n  yield return new WaitForSeconds(EndDelay);\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      <PostImageComponent\r\n        class=\"post-image\"\r\n        :image=\"{\r\n          uri:\r\n            'posts/programmatic-animation-using-coroutines/color-lerp-example.gif'\r\n        }\"\r\n      />\r\n    </p>\r\n    <p>\r\n      The power of this util is that you are not tied to what you want to\r\n      animate or how. You can use whatever lerping method you want since the\r\n      function primarily controls the timing for your lerps. Whether you need to\r\n      animate numbers (<code>Mathf.Lerp</code>), transform positions\r\n      (<code>Vector2.Lerp</code>), or colors (<code>Color.Lerp</code>), there\r\n      are plenty of methods you can use with the util to create dynamically\r\n      animated events in your game. If you're adventurous you could use an\r\n      entirely different interpolation method, although in later sections you'll\r\n      see there might not be a need to do that at all.\r\n    </p>\r\n    <p>\r\n      This is a good start but the limitation with lerping is that it is a\r\n      <strong>linear</strong> interpolation. For animations this means it will\r\n      only animate properties in a linear time-scale. Those with any animation\r\n      experience understand that linear movement is not the only way to\r\n      transition properties, nor is it always the desired one.\r\n    </p>\r\n    <p>\r\n      This util is brought to the next level when we utilise the\r\n      <code>AnimationCurve</code> class in our <code>Lerp</code> util to allow\r\n      us to control the time curve with hand-placed precision.\r\n    </p>\r\n    <h3 id=\"animationcurve\">AnimationCurve</h3>\r\n    <p>\r\n      <code>AnimationCurve</code> is one of the core classes that powers the\r\n      animation system in Unity, it is used in animation clips to provide a\r\n      function of a property's value over time.\r\n    </p>\r\n    <p>\r\n      The main usage of this class that we need is its\r\n      <code>Evaluate</code> method which gives us the value of a point on the\r\n      curve at a given time. The curve is modelled as a mathematical function\r\n      over an x/y axis, a reminder to those that <code>f(x)=mx+b</code> is still\r\n      a thing after highschool. Normally this is used to control a property of\r\n      an animation's target object over time, but for our case we will use it to\r\n      control the <code>t</code> parameter of our lerps. This essentially allows\r\n      us to have non-linear interpolation and to unlock the true potential of\r\n      building various kinds of animations using coroutines.\r\n    </p>\r\n    <p>\r\n      <PostImageComponent\r\n        class=\"post-image\"\r\n        :image=\"{\r\n          uri:\r\n            'posts/programmatic-animation-using-coroutines/animation-curve-editor.jpg',\r\n          subtitle:\r\n            'With a built-in property editor for our <code>AnimationCurve\\'s</code> serialized/public variables, polishing our animations timing is easy and intuitive. As an added bonus if you add <a href=\\'https://forum.unity.com/threads/copy-and-paste-curves.162557/#post-1277055\\'>this editor script</a> to an <code>/Editor</code> folder you can enable copy/pasting of curves.'\r\n        }\"\r\n      />\r\n    </p>\r\n    <p>\r\n      This integration with our <code>Lerp</code> util can be implemented as the\r\n      following:\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">/// &lt;summary&gt;\r\n/// provides a util to easily control the timing of a lerp over a duration\r\n/// &lt;/summary&gt;\r\n  /// &lt;param name=\"duration\"&gt;How long our lerp will take&lt;/param&gt;\r\n  /// &lt;param name=\"action\"&gt;The action to perform per frame of the lerp, is given the progress t in [0,1]&lt;/param&gt;\r\n/// &lt;param name=\"curve\"&gt;If we want out time curve to follow a specific animation curve&lt;/param&gt;\r\n/// &lt;returns&gt;&lt;/returns&gt;\r\npublic static IEnumerator Lerp(float duration, Action&lt;float&gt; action, AnimationCurve curve = null) {\r\n  float time = 0;\r\n\r\n  // by default we use a linear evaluation\r\n  Func&lt;float, float&gt; tEval = t =&gt; t;\r\n\r\n  // If a curve is provided follow the curve for our t evaluations instead\r\n  if (curve != null) tEval = t =&gt; curve.Evaluate(t);\r\n  while (time &lt; duration) {\r\n    float delta = Time.deltaTime;\r\n    float t = (time + delta &gt; duration) ? 1 : (time / duration);\r\n    action(tEval(t));\r\n    time += delta;\r\n    yield return null;\r\n  }\r\n  action(tEval(1));\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      One caveat is that for all of our animation curves we use we should always\r\n      ensure it is normalised between [0,1] in the x-axis since our lerp will\r\n      only ever be evaluated in that range. Whether this is enforced in code or\r\n      good practices in the editor- the idea is the same.\r\n    </p>\r\n    <p>\r\n      <PostImageComponent\r\n        class=\"post-image\"\r\n        :image=\"{\r\n          uri:\r\n            'posts/programmatic-animation-using-coroutines/animation-curves.gif',\r\n          subtitle:\r\n            'Showing how different animation curves affect the look and feel of the same translation. Small changes like this can help you polish the presentation and quality of your gameplay.'\r\n        }\"\r\n      />\r\n    </p>\r\n    <h3 id=\"someextras\">Some extras</h3>\r\n    <p>\r\n      The following is the util as it stands in my current codebase with all of\r\n      its extra features, code can be found\r\n      <a\r\n        href=\"https://github.com/mbitzos/devblog-code-examples/tree/main/programmatic-animation-using-coroutines\"\r\n        >here on my GitHub.</a\r\n      >\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">/// &lt;summary&gt;\r\n/// provides a util to easily control the timing of a lerp over a duration\r\n/// &lt;/summary&gt;\r\n/// &lt;param name=\"duration\"&gt;How long our lerp will take&lt;/param&gt;\r\n/// &lt;param name=\"action\"&gt;The action to perform per frame of the lerp, is given the progress t in [0,1]&lt;/param&gt;\r\n/// &lt;param name=\"realTime\"&gt;If we want to run our lerp on real time&lt;/param&gt;\r\n/// &lt;param name=\"smooth\"&gt;If we want our time curve to run on a smooth step&lt;/param&gt;\r\n/// &lt;param name=\"curve\"&gt;If we want our time curve to follow a specific animation curve&lt;/param&gt;\r\n/// &lt;param name=\"inverse\"&gt;If we want the time to be inversed such that it returns t-1&lt;/param&gt;\r\n/// &lt;returns&gt;&lt;/returns&gt;\r\npublic static IEnumerator Lerp(\r\n  float duration,\r\n  Action&lt;float&gt; action,\r\n  bool realTime = false,\r\n  bool smooth = false,\r\n  AnimationCurve curve = null,\r\n  bool inverse = false\r\n) {\r\n  float time = 0;\r\n  Func&lt;float, float&gt; tEval = t =&gt; t;\r\n  if (smooth) tEval = t =&gt; Mathf.SmoothStep(0, 1, t);\r\n  if (curve != null) tEval = t =&gt; curve.Evaluate(t);\r\n  while (time &lt; duration) {\r\n    float delta = realTime ? Time.fixedDeltaTime : Time.deltaTime;\r\n    float t = (time + delta &gt; duration) ? 1 : (time / duration);\r\n    if (inverse)\r\n      t = 1 - t;\r\n    action(tEval(t));\r\n    time += delta;\r\n    yield return null;\r\n  }\r\n  action(tEval(inverse ? 0 : 1));\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <h2 id=\"puttingitalltogether\">Putting it all together</h2>\r\n    <p>\r\n      With <code>Lerp</code> and <code>WaitForSeconds</code> you will be able to\r\n      make just about any form of dynamic animation in a coroutine that is\r\n      easily controllable with code.\r\n    </p>\r\n    <p>\r\n      Here is some examples of how I've used coroutines to control animated\r\n      events in my games:\r\n    </p>\r\n    <p>\r\n      <PostImageComponent\r\n        class=\"post-image\"\r\n        :image=\"{\r\n          uri:\r\n            'posts/programmatic-animation-using-coroutines/card-deck-animation.gif',\r\n          subtitle:\r\n            'Controlling how the cards fit together in a players deck for a carding building prototype. Having this built with code allowed me to easily create a card deck that was constantly changing in size.'\r\n        }\"\r\n      />\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">// Card fade animation\r\nyield return CoroutineUtil.Lerp(FadeTime, t =&gt; {\r\n  Color c = FrameSprite.color;\r\n  c.a = Mathf.Lerp(initial, 1f, t);\r\n  FrameSprite.color = c;\r\n});\r\n---\r\n// Card hover/unhover animation\r\nyield return CoroutineUtil.Lerp(HoverTime, t =&gt; {\r\n  cardTransform.localPosition = Vector2.Lerp(originalPosition, target, t);\r\n}, smooth : true);\r\n---\r\n// Deck organizer animation\r\nyield return CoroutineUtil.Lerp(TransitionTime, t =&gt; {\r\n\r\n  // set positions\r\n  for (int i = 0; i &lt; size; i++) {\r\n    Vector2 pos = Vector2.Lerp(originalPositions[i], newPositions[i], t);\r\n    cards[i].transform.position = new Vector3(pos.x, pos.y, cards[i].transform.position.z);\r\n  }\r\n}, smooth : true);\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      <PostImageComponent\r\n        class=\"post-image\"\r\n        :image=\"{\r\n          uri:\r\n            'posts/programmatic-animation-using-coroutines/attack-dash-animations.gif',\r\n          subtitle:\r\n            'Polishing the exact distance and timing of a players strong attack lunge and dash for a snappy beat-em-up experience. Since this lunge could be enhanced by item stats, having the parameters of the animation driven by variables in the code made it easy to test and adjust.'\r\n        }\"\r\n      />\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">// Jump/attack movement animation\r\nyield return CoroutineUtil.Lerp(timeUntilNextBeat, t =&gt; {\r\n  end.x += xMovement;\r\n  end.y += yMovement;\r\n  stateObject.SetPosition(Vector2.Lerp(start, end, t));\r\n  Vector2 dropshadowSize = dropShadowLocalScale.Copy();\r\n  float size = stateObject.HeavyAttackDropShadowAnim.Evaluate(t).RoundTo(0.1f);\r\n  dropshadowSize += size * Vector2.one;\r\n  stateObject.dropShadow.transform.localScale = dropshadowSize;\r\n}, curve : stateObject.HeavyAttackJumpCurve);\r\n---\r\n// Dash Animation\r\nyield return CoroutineUtil.Lerp(stateObject.DashTime, t =&gt; {\r\n  stateObject.SetPosition(Vector2.Lerp(initial, target, t));\r\n}, curve : stateObject.DashCurve);\r\n---\r\n// Dash ghost effect\r\nSprite ghostSprite = stateObject.CharacterRenderer.sprite;\r\nwhile (ghosts &lt; stateObject.DashGhosts) {\r\n  ghosts++;\r\n  spawnGhost(ghostSprite);\r\n  yield return wait;\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      <PostImageComponent\r\n        class=\"post-image\"\r\n        :image=\"{\r\n          uri:\r\n            'posts/programmatic-animation-using-coroutines/ambient-lighting-animations.gif',\r\n          subtitle:\r\n            'Building a system of ambient lighting in our horror game using coroutine animations allowed us to have in-game events dynamically influence the atmosphere around the player.'\r\n        }\"\r\n      />\r\n    </p>\r\n    <CodeBlock>\r\n      <pre><code class=\"csharp language-csharp\">// the idle animator of the lights\r\nIEnumerator idleAnimation() {\r\n  while (true) {\r\n\r\n    // randomly wait\r\n    float wait = UnityEngine.Random.Range(MinWait, MaxWait);\r\n\r\n    if (StartingState)\r\n      switch (lightFlickerMode) {\r\n        case LightFlickerMode.Soft:\r\n          yield return StartCoroutine(softFlicker(Mathf.Infinity)); // enter infinite loop for soft flicker\r\n          break;\r\n        case LightFlickerMode.Hard: // just wait\r\n          yield return new WaitForSeconds(wait);\r\n          break;\r\n        case LightFlickerMode.All:\r\n          yield return StartCoroutine(softFlicker(wait)); // enter waiting period with soft flicker\r\n          break;\r\n      }\r\n    else\r\n      yield return new WaitForSeconds(wait);\r\n\r\n    // randomly flicker\r\n    int flickerAmount = UnityEngine.Random.Range(MinFlicker, MaxFlicker + 1);\r\n    yield return StartCoroutine(flickerAnimation(flickerAmount));\r\n  }\r\n}\r\n\r\n// the rapid flickering of the light animation\r\nIEnumerator flickerAnimation(int flickerCount) {\r\n  while (flickerCount &gt; 0) {\r\n    toggleLight(!state);\r\n    yield return new WaitForSeconds(FlickerRate);\r\n    toggleLight(!state);\r\n    yield return new WaitForSeconds(FlickerRate);\r\n    flickerCount--;\r\n  }\r\n}\r\n\r\n// animates a rapid soft flicker on idle\r\nIEnumerator softFlicker(float idleTime) {\r\n  float originalIntensity = intensity;\r\n  float nextIntensity = originalIntensity * SoftFlickerModifer;\r\n\r\n  while (idleTime &gt; 0) {\r\n    intensity = nextIntensity;\r\n    yield return softFlickerWait;\r\n    intensity = originalIntensity;\r\n    yield return softFlickerWait;\r\n    idleTime -= SoftFlickerRate * 2;\r\n  }\r\n}\r\n</code></pre>\r\n    </CodeBlock>\r\n    <p>\r\n      Simply having the ability to edit public/serializable variables for my\r\n      animations during run-time makes development fast and satisfying. As I\r\n      play my game I can immediately see the impact the changes my variables\r\n      make to my animations. This is especially useful when you are in the\r\n      polishing stages of a feature and need to find that magic number.\r\n    </p>\r\n    <h2 id=\"conclusion\">Conclusion</h2>\r\n    <p>\r\n      Coroutines are a very powerful tool that allow you to quickly create\r\n      dynamic animations with none of the compromise. If you’ve ever felt the\r\n      time sink of creating animated events using the Unity Animator, I hope\r\n      that this article will help you see things from a programmatic perspective\r\n      and unshackle yourself from the limitations of statically defined\r\n      animations.\r\n    </p>\r\n    <p>\r\n      All of the code examples can be found\r\n      <a\r\n        href=\"https://github.com/mbitzos/devblog-code-examples/tree/main/programmatic-animation-using-coroutines\"\r\n        target=\"_blank\"\r\n        >here on my GitHub.</a\r\n      >\r\n    </p>\r\n    <p>\r\n      All of the pixel art shown was created by our artist for various games\r\n      we've worked on,\r\n      <a href=\"https://www.artstation.com/pixelgrim\" target=\"_blank\"\r\n        >check out his artstation</a\r\n      >.\r\n    </p>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport PostImageComponent from \"@/views/devblog/components/image.vue\";\r\nimport CodeBlock from \"@/views/devblog/components/code.vue\";\r\nexport default defineComponent({\r\n  components: {\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    PostImageComponent,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    CodeBlock\r\n  }\r\n});\r\n</script>\r\n<style lang=\"scss\"></style>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nimport PostImageComponent from \"@/views/devblog/components/image.vue\";\r\nimport CodeBlock from \"@/views/devblog/components/code.vue\";\r\nexport default defineComponent({\r\n  components: {\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    PostImageComponent,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    CodeBlock\r\n  }\r\n});\r\n","import { render } from \"./programmatic-animation-using-coroutines.vue?vue&type=template&id=a8334544\"\nimport script from \"./programmatic-animation-using-coroutines.vue?vue&type=script&lang=ts\"\nexport * from \"./programmatic-animation-using-coroutines.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { Post } from \"@/types\";\r\nimport { markRaw } from \"vue\";\r\nimport PostContent from \"./programmatic-animation-using-coroutines.vue\";\r\n\r\nconst post: Post = markRaw({\r\n  title: \"Creating dynamic animations programmatically with Unity coroutines\",\r\n  tags: [\"code\", \"c#\", \"unity\"],\r\n  mainImage: { uri: \"posts/programmatic-animation-using-coroutines/cover.png\" },\r\n  date: new Date(\"2022-12-11T02:22:18.484Z\"),\r\n  component: PostContent,\r\n  key: \"programmatic-animation-using-coroutines\"\r\n});\r\n\r\nexport default post;\r\n","// Template file for generation\r\nimport { Post } from \"@/types\";\r\nimport { default as post0 } from \"./generated-posts/introductions.meta\";\r\nimport { default as post1 } from \"./generated-posts/fsm-player-controllers.meta\";\r\nimport { default as post2 } from \"./generated-posts/programmatic-animation-using-coroutines.meta\";\r\n\r\nconst posts: Array<Post> = [post0, post1, post2];\r\nexport default posts;\r\n","\r\nimport { defineComponent } from \"@vue/runtime-core\";\r\nimport Posts from \"../posts/index\";\r\nimport { Post } from \"@/types\";\r\nconst posts = [...Posts];\r\nposts.reverse();\r\nexport default defineComponent({\r\n  data() {\r\n    return {\r\n      articles: posts\r\n    };\r\n  },\r\n  methods: {\r\n    isSelected(post: Post) {\r\n      return post.key == this.$route.name;\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./sidebar.vue?vue&type=template&id=626724b4\"\nimport script from \"./sidebar.vue?vue&type=script&lang=ts\"\nexport * from \"./sidebar.vue?vue&type=script&lang=ts\"\n\nimport \"./sidebar.vue?vue&type=style&index=0&id=626724b4&lang=scss\"\nscript.render = render\n\nexport default script","\r\nimport sidebar from \"./components/sidebar.vue\";\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({\r\n  components: { sidebar },\r\n  data() {\r\n    return {\r\n      open: false\r\n    };\r\n  },\r\n  methods: {\r\n    toggleOpen() {\r\n      this.open = !this.open;\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./index.vue?vue&type=template&id=2a5999e6\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=2a5999e6&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"post\">\r\n    <div class=\"title is-2\">{{ post.title }}</div>\r\n    <div>\r\n      <span class=\"datestamp\">\r\n        {{\r\n          post.date?.toLocaleDateString(\"en-US\", {\r\n            year: \"numeric\",\r\n            month: \"long\",\r\n            day: \"numeric\"\r\n          })\r\n        }}\r\n      </span>\r\n      -\r\n      <span class=\"taggs\">\r\n        <span class=\"tagg\" v-for=\"tag in post.tags\" :key=\"tag\">\r\n          [{{ tag }}]\r\n        </span>\r\n      </span>\r\n    </div>\r\n    <PostImageComponent\r\n      class=\"main-image\"\r\n      :image=\"post.mainImage\"\r\n      v-if=\"post.mainImage\"\r\n    />\r\n    <div class=\"main-divider\" />\r\n    <component class=\"main-content\" :is=\"post.component\" />\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport PostImageComponent from \"./image.vue\";\r\nimport hljs from \"highlight.js\";\r\nimport { Post } from \"@/types\";\r\nexport default defineComponent({\r\n  components: {\r\n    PostImageComponent\r\n  },\r\n  props: {\r\n    post: {\r\n      type: Object as () => Post,\r\n      required: true\r\n    }\r\n  },\r\n  mounted() {\r\n    hljs.highlightAll();\r\n  }\r\n});\r\n</script>\r\n<style lang=\"scss\">\r\n.post {\r\n  .main-content {\r\n    margin-top: 1em;\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6 {\r\n      margin-top: 30px;\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 30px;\r\n    }\r\n    h3 {\r\n      font-size: 22px;\r\n    }\r\n    h4 {\r\n      font-size: 20px;\r\n    }\r\n    h5 {\r\n      font-size: 17px;\r\n    }\r\n    h6 {\r\n      font-size: 15px;\r\n    }\r\n\r\n    p {\r\n      margin-top: 10px;\r\n    }\r\n\r\n    ol,\r\n    ul {\r\n      margin-left: 25px;\r\n    }\r\n\r\n    ul {\r\n      list-style: disc;\r\n    }\r\n  }\r\n  .main-image {\r\n    margin-top: 1em;\r\n  }\r\n  .main-divider {\r\n    width: 100%;\r\n    border: 1px solid rgba($pink, 0.2);\r\n    border-bottom: 0;\r\n    margin-top: 1em;\r\n  }\r\n  .title {\r\n    margin-bottom: 5px !important;\r\n  }\r\n  .subtitle {\r\n    font-style: italic;\r\n    margin-bottom: 0.5em !important;\r\n  }\r\n\r\n  .datestamp {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .taggs {\r\n    .tagg {\r\n      color: gray;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nimport PostImageComponent from \"./image.vue\";\r\nimport hljs from \"highlight.js\";\r\nimport { Post } from \"@/types\";\r\nexport default defineComponent({\r\n  components: {\r\n    PostImageComponent\r\n  },\r\n  props: {\r\n    post: {\r\n      type: Object as () => Post,\r\n      required: true\r\n    }\r\n  },\r\n  mounted() {\r\n    hljs.highlightAll();\r\n  }\r\n});\r\n","import { render } from \"./post.vue?vue&type=template&id=31b21195\"\nimport script from \"./post.vue?vue&type=script&lang=ts\"\nexport * from \"./post.vue?vue&type=script&lang=ts\"\n\nimport \"./post.vue?vue&type=style&index=0&id=31b21195&lang=scss\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHashHistory, RouteRecordRaw } from \"vue-router\";\r\nimport Home from \"../views/home/index.vue\";\r\nimport Devblog from \"../views/devblog/index.vue\";\r\nimport Posts from \"@/views/devblog/posts/index\";\r\nimport { Post } from \"@/types\";\r\nimport PostComponent from \"../views/devblog/components/post.vue\";\r\n\r\n// Dynamically creates routes based on post keys\r\nconst devblogPaths: Array<RouteRecordRaw> = Posts.map((post: Post) => {\r\n  return {\r\n    path: post.key,\r\n    name: post.key,\r\n    component: PostComponent,\r\n    props: { post }\r\n  };\r\n});\r\n\r\nconst defaultPath = devblogPaths[0].path;\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: \"/\",\r\n    name: \"home\",\r\n    component: Home\r\n  },\r\n  {\r\n    path: \"/devblog\",\r\n    name: \"devblog\",\r\n    redirect: `/devblog/${defaultPath}`,\r\n    component: Devblog,\r\n    children: devblogPaths\r\n  },\r\n  {\r\n    path: \"/:pathMatch(.*)\",\r\n    name: \"redirect\",\r\n    redirect: { name: \"home\" }\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory(),\r\n  routes\r\n});\r\n\r\nexport default router;\r\n","import \"highlight.js/styles/github-dark-dimmed.css\";\r\nimport { createApp } from \"vue\";\r\nimport App from \"./App.vue\";\r\nimport router from \"./router\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nrequire(\"@/assets/main.scss\");\r\nlibrary.add(fas, far);\r\ncreateApp(App)\r\n  .use(router)\r\n  .component(\"font-awesome-icon\", FontAwesomeIcon)\r\n  .mount(\"#app\");\r\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./code.vue?vue&type=style&index=0&id=5b79510b&lang=scss\"","module.exports = __webpack_public_path__ + \"fonts/AkagiPro-Black.91adf9b7.ttf\";","module.exports = __webpack_public_path__ + \"img/fsm-quest.fc3e4030.jpg\";","module.exports = __webpack_public_path__ + \"img/fsm-locked-door.8a24fb8f.jpg\";","module.exports = __webpack_public_path__ + \"img/cover.821cfbe3.jpg\";","module.exports = __webpack_public_path__ + \"img/animation-curves.2df75a7d.gif\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./index.vue?vue&type=style&index=0&id=588d6188&lang=scss&scoped=true\""],"sourceRoot":""}